@use 'styles/utilities';

.view {
    cursor: pointer;
    position: absolute;
    top: 4ch;
    right: 10ch;
    display: grid;

    @media (max-width: utilities.$small-width) {
        top: var(--line-height);
        right: 1ch;
    }
}

.toolbar {
    display: flex;
    justify-content: right;
}

.button {
    user-select: none;
    cursor: pointer;
    width: fit-content;
    padding: 12px 24px;
    background-color: var(--primary-30);
    color: var(--primary);
    border-radius: 6px;
    border: none;

    @media (hover: hover) {
        padding: 6px 24px;
    }
}

.backdrop {
    --speed: 450ms;
    --delay: 150ms;
    --filter: blur(4px) brightness(1);

    position: fixed;
    top: 0px;
    left: 0px;
    height: 100%;
    width: 100%;
    z-index: 10;
    background-color: rgba(0, 0, 0, 0.1);
    backdrop-filter: var(--filter);
    animation: blur var(--speed) ease-in-out forwards;

    &.close {
        animation: un-blur var(--speed) ease-in-out var(--delay) forwards;
    }

    @keyframes blur {
        from {
            background-color: rgba(0, 0, 0, 0);
            backdrop-filter: blur(0px) brightness(1);
        }
        to {
            background-color: rgba(0, 0, 0, 0.1);
            backdrop-filter: var(--filter);
        }
    }

    @keyframes un-blur {
        from {
            background-color: rgba(0, 0, 0, 0.1);
            backdrop-filter: var(--filter);
        }
        to {
            background-color: rgba(0, 0, 0, 0);
            backdrop-filter: blur(0px) brightness(1);
        }
    }

    .form {
        --curve: cubic-bezier(0.465, 0.183, 0.153, 0.946);
        --form-offset: 5vw;
        --height: calc(100dvh - (calc(var(--form-offset) * 1)));
        --width: calc(100vw - (calc(var(--form-offset) * 2)));
        --border: none;

        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        height: var(--height);
        width: var(--width);
        max-width: 680px;
        top: 100dvh;
        border: var(--border);
        background-color: var(--background-color);
        border-radius: 6px 6px 0px 0px;
        animation: open var(--speed) var(--curve) forwards;
        z-index: 100;

        &.close {
            animation: close var(--speed) var(--curve) forwards;
        }

        @keyframes open {
            from {
                top: 100dvh;
            }

            to {
                top: var(--form-offset);
            }
        }

        @keyframes close {
            from {
                top: var(--form-offset);
            }

            to {
                top: 100dvh;
            }
        }

        .close {
            cursor: pointer;
            position: absolute;
            top: 4ch;
            left: 10ch;
            color: var(--primary);

            @media (max-width: utilities.$small-width) {
                top: var(--line-height);
                left: 1ch;
            }
        }

        .content {
            padding: 10ch 10ch 0vw 10ch;
            height: 100%;
            display: flex;
            flex-direction: column;

            @media (max-width: utilities.$small-width) {
                padding: calc(var(--line-height) * 3) 2ch 0px 2ch;
            }

            .title {
                width: 100%;
                display: flex;
                gap: 6ch;
                align-items: center;
                position: relative;

                .upload {
                    background-color: var(--muted);
                    border-radius: 50%;
                    border: none;
                    height: 32px;
                    min-width: 32px;
                    display: grid;
                    place-content: center;

                    svg {
                        height: 22px;
                        width: 22px;
                        fill: var(--color);
                    }

                    &:not([disabled]) {
                        cursor: pointer;
                        background-color: var(--primary-30);

                        svg {
                            fill: var(--primary);
                        }
                    }
                }

                .exists {
                    position: absolute;
                    bottom: calc(var(--line-height) * -1.5);
                    left: 0px;
                    color: var(--primary);
                }
            }

            .field {
                flex: 1;
                width: 100%;

                label {
                    display: block;
                    // color: var(--primary);
                    color: var(--color);
                }
            }

            input {
                font-family: var(--font);
                width: 100%;
                background-color: var(--background-color);
                color: var(--color);
                padding: calc(var(--line-height) / 2) 0px;
                border: none;
                border-bottom: solid 1px var(--primary);

                &:focus {
                    outline: none;
                }
            }

            .body {
                font-family: var(--font);
                width: 100%;
                background-color: var(--background-color);
                border: none;
                color: var(--color);
                padding: var(--line-height) 2ch var(--line-height) 0px;
                height: 100%;
                resize: none;

                @media (max-width: utilities.$small-width) {
                    padding: var(--line-height) 1ch var(--line-height) 0px;
                }

                &:focus {
                    outline: none;
                }
            }

            .show-preivew-ctr {
                display: flex;
                justify-content: center;

                .show-preivew {
                    cursor: pointer;
                    width: fit-content;
                    background-color: transparent;
                    border: none;
                    color: var(--primary);
                    padding: 12px 24px;
                }
            }

            .preview {
                min-height: calc(var(--line-height) * 3);
                overflow: overlay;

                &::-webkit-scrollbar {
                    width: 2px;
                    background-color: transparent;
                }
                &::-webkit-scrollbar-thumb {
                    background-color: var(--primary);
                }
                &::-webkit-scrollbar-track {
                    background-color: var(--primary-30);
                }
            }
        }
    }

    // https://codepen.io/WebCoder49/pen/dyNyraq

    #editing,
    #highlighting {
        padding: var(--line-height) 0px;
        position: absolute;
        top: 0px;
        left: 0px;
        border: none;
        width: 100%;
        height: 100%;
    }

    #editing,
    #highlighting,
    #highlighting * {
        /* Also add text styles to highlighing tokens */
        font-family: var(--font-monospace);
        tab-size: 4;
    }

    /* Move the textarea in front of the result */
    #editing {
        z-index: 1;

        &::-webkit-scrollbar {
            width: 2px;
            background-color: transparent;
        }

        &::-webkit-scrollbar-thumb {
            background-color: var(--primary);
        }

        &::-webkit-scrollbar-track {
            background-color: var(--primary-30);
        }
    }

    #highlighting {
        z-index: 0;

        overflow: hidden; /* Hide scrollbars */
    }

    /* Make textarea almost completely transparent */
    #editing {
        color: transparent;
        background: transparent;
        caret-color: white; /* Or choose your favourite color */
        resize: none;
        outline: none;
    }

    pre {
        margin: 0px;
    }

    /* Paragraphs; First Image */
    * {
        font-family: var(--font-monospace);
    }

    p code {
        border-radius: 2px;
        background-color: #eee;
        color: #111;
    }
}
